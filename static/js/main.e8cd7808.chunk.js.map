{"version":3,"sources":["Stock.js","App.js","serviceWorker.js","index.js"],"names":["chart","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","Stock","props","state","inputSymbol","selectedOption","clicked","handleChange","bind","handleSubmit","change","handleClick","event","this","setState","target","value","preventDefault","fetchStock","console","log","fetchAverage","parent","title","stockChartXValuesFunction","stockChartYValuesFunction","symbol","apiCall","fetch","then","response","status","json","alert","key","push","parseFloat","axisX","axisY","dataArr","item","length","className","id","onClick","onSubmit","type","placeholder","onChange","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e8cd7808.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Stock.css';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nlet chart = {\r\n    labels: [],\r\n    datasets: [\r\n        {\r\n            label:'',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#1c49ff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 20,\r\n            data: [],\r\n        },\r\n        {\r\n            label: 'Average Off',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgb(57,57,57)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#1c49ff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 20,\r\n            data: []\r\n        }\r\n    ]\r\n};\r\nclass Stock extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inputSymbol: 'FB',\r\n            selectedOption: 'default',\r\n            clicked: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.change = this.change.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({inputSymbol: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.fetchStock();\r\n    }\r\n\r\n    handleClick(){\r\n        this.setState(state => ({ clicked: !state.clicked }));\r\n        console.log(this.state.clicked);\r\n        this.fetchAverage();\r\n    }\r\n\r\n    change(event){\r\n        this.setState({selectedOption: event.target.value});\r\n        this.fetchStock();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchStock();\r\n    }\r\n\r\n    fetchStock(){\r\n        const parent = this;\r\n        const apiKey = '5CIMSF66Q8D8J60O';\r\n        let title = '';\r\n        let stockChartXValuesFunction = [];\r\n        let stockChartYValuesFunction = [];\r\n        let symbol = parent.state.inputSymbol;\r\n        let apiCall = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${symbol}&outputsize=compact&apikey=${apiKey}`;\r\n\r\n        fetch(apiCall)\r\n            .then(\r\n                function(response) {\r\n                    if(response.status === 200){\r\n                        return response.json();\r\n                    }else if(response.status !== 200){\r\n                        alert('Try another symbol. Your symbol is incorrect.');\r\n                    }\r\n                }\r\n            )\r\n            .then(\r\n                function(data) {\r\n                    if(data['Error Message']) {\r\n                        alert('Please try another symbol! Your symbol is incorrect.');\r\n                    } else {\r\n                        for (var key in data['Time Series (Daily)']) {\r\n                            chart['labels'].push(key);\r\n                            chart['datasets'][0]['data'].push(parseFloat(data['Time Series (Daily)'][key]['1. open']));\r\n                        }\r\n                        title ='Stock Price for '+ parent.state.inputSymbol;\r\n                        chart['datasets'][0]['label']= title;\r\n                    }\r\n\r\n                    parent.setState({\r\n                        axisX: stockChartXValuesFunction,\r\n                        axisY: stockChartYValuesFunction\r\n                    });\r\n                })\r\n    }\r\n\r\n    fetchAverage(){\r\n        const parent = this;\r\n        const apiKey = '5CIMSF66Q8D8J60O';\r\n        let symbol = parent.state.inputSymbol;\r\n        let apiCall = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${symbol}&outputsize=compact&apikey=${apiKey}`;\r\n\r\n        fetch(apiCall)\r\n            .then(\r\n                function(response) {\r\n                    if(response.status === 200){\r\n                        return response.json();\r\n                    }else if(response.status !== 200){\r\n                        alert('Try another symbol. Your symbol is incorrect.');\r\n                    }\r\n                }\r\n            )\r\n            .then(\r\n                function() {\r\n                    if(parent.state.clicked === true) {\r\n                        chart['datasets'][1]['label']= 'Average ON';\r\n                        var dataArr = [100, 102, 192, 137, 435, 364];\r\n                        for (var item in dataArr)\r\n                            chart['datasets'][1]['data'].push(dataArr[item]);\r\n                        chart['datasets'][1]['borderColor'] = 'rgb(98,192,132)';\r\n                        console.log(chart['datasets'][1]['data']);\r\n                    }else if(parent.state.clicked === false){\r\n                        chart['datasets'][1]['label']= 'Average OFF';\r\n                        chart['datasets'][1]['data'].length = 0;\r\n                        chart['datasets'][1]['borderColor'] = 'rgb(57,57,57)';\r\n                        console.log(chart['datasets'][1]['data']);\r\n                    }\r\n                })\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"stock\">\r\n                <div className=\"fixed\">\r\n                    <h1 id=\"title\">Welcome to Stock Web App!</h1>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        <div id=\"chart\">\r\n                            <Line data={chart} />\r\n                            <button className={\"btn btn-primary\"} onClick={this.handleClick}>Show Average</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-4\">\r\n                        <h4 className=\"symbol\">Your stock symbol is: {this.state.inputSymbol}</h4>\r\n                        <form  className=\"form\" onSubmit={this.handleSubmit}>\r\n                            <div  className=\"form\">\r\n                                <label>\r\n                                    Enter another symbol:\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className=\"form\">\r\n                                <input type=\"text\"  className=\"form-control\" placeholder=\"Symbol\" onChange={this.handleChange.bind(this)} />\r\n                            </div>\r\n\r\n                            <p id=\"text\" className=\"symbol\"> Maybe you want to change the number of days</p>\r\n                            <select className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={this.change.bind(this)} value={this.state.selectedOption}>\r\n                                <option value=\"default\">Default</option>\r\n                                <option value=\"10\">10 days</option>\r\n                                <option value=\"50\">50 days</option>\r\n                            </select>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stock;\r\n","import React from 'react';\nimport './App.css';\nimport Stock from './Stock' ;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stock>\n      </Stock>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}